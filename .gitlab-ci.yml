stages:
  - build
  - deploy

cache:
  key: node-modules-cache
  paths:
    - node_modules/

variables:
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://docker:2375

build:
  stage: build
  environment:
    name: $CI_COMMIT_BRANCH
  image: google/cloud-sdk:340.0.0
  before_script:
    - apt-get update -y
    - apt-get install jq -y
  services:
    - docker:dind
  script:
    - export VERSION=$(cat package.json | jq -r .version).$CI_COMMIT_REF_SLUG
    - export NAME=$(cat package.json | jq -r .name)
    - echo $VERSION
    - echo $NAME
    - gcloud config set project $PROJECT_ID
    - gcloud auth activate-service-account $SERVICE_ACCOUNT_EMAIL --key-file $GCP_SERVICE_ACCOUNT
    - gcloud auth configure-docker us-west2-docker.pkg.dev
    - docker build --build-arg GCP_KEY="${GPC_KEY_DEV}"  --build-arg NEXT_PUBLIC_APP_API_URL="${NEXT_PUBLIC_APP_API_URL}" -t us-west2-docker.pkg.dev/$PROJECT_ID/test/backend/$NAME:$VERSION .
    - docker push us-west2-docker.pkg.dev/$PROJECT_ID/test/backend/$NAME:$VERSION

deploy:
  stage: deploy
  environment:
    name: $CI_COMMIT_BRANCH
  image: google/cloud-sdk:340.0.0
  before_script:
    - apt-get update -y
    - apt-get install jq -y
  script:
    - gcloud config set project $PROJECT_ID
    - gcloud auth activate-service-account $SERVICE_ACCOUNT_EMAIL --key-file $GCP_SERVICE_ACCOUNT
    - export VERSION=$(cat package.json | jq -r .version).$CI_COMMIT_REF_SLUG
    - export NAME=$(cat package.json | jq -r .name)
    - export IMAGE=us-west2-docker.pkg.dev/$PROJECT_ID/test/backend/$NAME:$VERSION
    - >
      gcloud run deploy $NAME
      --image=$IMAGE
      --memory=$MEMORY
      --platform=managed
      --port=8080
      --region=$REGION
      --project=$PROJECT_ID
      --allow-unauthenticated
      --min-instances=$MIN_INSTANCES
      --update-env-vars NEXT_PUBLIC_APP_API_URL=$NEXT_PUBLIC_APP_API_URL
  rules:
    - if: $CI_COMMIT_REF_NAME == "develop"
      when: always
    - if: $CI_COMMIT_REF_NAME == "master"
      when: always
